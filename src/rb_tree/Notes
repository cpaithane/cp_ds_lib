What is Red-Black tree?

1. Root of the tree should be black.
2. Every null leaf node is black.
3. Every node to be inserted is red.
4. Every path must have same no. of black nodes.

=============

Insertion Violations cases : 

A. Case 1 :
Red node whose parent and uncle is also red.
Fix : Change the color of parent, grand parent and uncle node.
If grand parent is root of RB tree, then don't change the color as root should
always be a black node.
Also, if grand parent is red and its parent is also red, go ahead for fixing
violations.

B. Case 2 :
1. Red node whose parent is red and uncle is black.
2. Also, the node is right child of left parent.
3. Also, the node is left child of right parent.
Fix : 
1. Left rotate around the parent node in case of #2.
2. Right rotate around the parent node in case of #3.
3. Go for case 3 fix.

C. Case 3 :
1. Uncle node is black.
2. Violating node is left child of left child.
3. Violating node is right child of right child.
Fix : 
1. Rotate the grand parent to right in case of #1.
2. Rotate the grand parent to left in case of #2.
3. Swap the colors of grand parent and parent node.

============

Deletion violation cases :

A. red-black : If node and its child are either red or black, then mark the replaced
node as black. This means, no change in black height.

B.
1. Sibling is black and one of two children are red.
2. Here, two children for sibling should be present.
Fix :
1. Rotate the sibling to left if sibling is right child of its parent.
2. Rotate the sibling to right if sibling is left child of its parent.
3. If right child of sibling is red, recolor it to black.

C.
1. Sibling is black and left child of sibling is red. Right-Left case
Fix :
1. Right rotate the sibling.
2. Swap the color among the sibling and left child.
3. Left rotate the parent of sibling.
Vice versa in case of Left-Right case.

D.
1. Sibling is black and two children are black.
Fix :
1. Change the color of sibling node to red.
2. Recur to parent

E.
1. Sibling is red.
Fix :
1. Left rotate parent of sibling if sibling is right child.
2. Right rotate parent of sibling if sibling is left child.
3. Recolor sibiling and parent of sibling.
4. Now, previous left child of sibling could be red. This results into case D.

============

