Largest Rectangle In Histogram
Solved 
You are given an array of integers heights where heights[i] represents the height of a bar. The width of each bar is 1.

Return the area of the largest rectangle that can be formed among the bars.

Note: This chart is known as a histogram.

Input: heights = [7,1,7,2,2,4]

Output: 8

Input: heights = [1,3,7]

Output: 7

Constraints:

1 <= heights.length <= 1000.
0 <= heights[i] <= 1000

You should aim for a solution with O(n) time and O(n) space, where n is the size of the input array.

https://www.youtube.com/watch?v=zx5Sw9130L0

class Solution:
    def largestRectangleArea(self, heights: List[int]) -> int:
        maxArea = 0
        stack = [] # Store index and height

        for i, h in enumerate(heights):
            t_idx = i
            while stack and stack[-1][1] > h:
                t_idx, t_h = stack.pop()
                maxArea = max(maxArea, t_h * (i - t_idx))

            stack.append((t_idx, h))
        
        # There will be non-empty stack. Calculate maxArea also
        for i, h in stack:
            maxArea = max(maxArea, h * (len(heights) - i))

        return maxArea