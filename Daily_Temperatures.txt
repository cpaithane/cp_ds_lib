Daily Temperatures

You are given an array of integers temperatures where temperatures[i] represents the daily temperatures on the ith day.

Return an array result where result[i] is the number of days after the ith day before a warmer temperature appears on a future day. If there is no day in the future where a warmer temperature will appear for the ith day, set result[i] to 0 instead.

Input: temperatures = [30,38,30,36,35,40,28]

Output: [1,4,1,2,1,0,0]

Input: temperatures = [22,21,20]

Output: [0,0,0]

You should aim for a solution as good or better than O(n) time and O(n) space, where n is the size of the input array.

class Solution:
    def dailyTemperatures(self, temperatures: List[int]) -> List[int]:
        stack = []
        res = [0] * len(temperatures)

        # For every current element, compare with top of stack.
        # Till cur > top, then pop and fill the res
        # Else push to stack.
        for i, cur in enumerate(temperatures):
            while stack and cur > stack[-1][0]:
                top, top_idx = stack.pop()
                res[top_idx] = i - top_idx
            stack.append((cur, i))

        return res