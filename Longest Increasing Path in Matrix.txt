Longest Increasing Path in Matrix

You are given a 2-D grid of integers matrix, where each integer is greater than or equal to 0.

Return the length of the longest strictly increasing path within matrix.

From each cell within the path, you can move either horizontally or vertically. You may not move diagonally.

Input: matrix = [[5,5,3],[2,3,6],[1,1,1]]

Output: 4

Explanation: The longest increasing path is [1, 2, 3, 6] or [1, 2, 3, 5].

Input: matrix = [[1,2,3],[2,1,4],[7,6,5]]

Output: 7

Constraints:

1 <= matrix.length, matrix[i].length <= 100

class Solution:
    def longestIncreasingPath(self, matrix: List[List[int]]) -> int:
        # DP solution
        dp = {}

        def recurse(i, j, prev):
            if (i < 0 or i >= len(matrix) or 
                j < 0 or j >= len(matrix[0]) or
                prev >= matrix[i][j]):
                return 0

            if (i, j) in dp:
                return dp[(i, j)]

            dist = 1 + recurse(i + 1, j, matrix[i][j])
            dist = max(dist, 1 + recurse(i - 1, j, matrix[i][j]))
            dist = max(dist, 1 + recurse(i, j + 1, matrix[i][j]))
            dist = max(dist, 1 + recurse(i, j - 1, matrix[i][j]))

            dp[(i, j)] = dist
            return dist

        dist = 0
        for i in range(0, len(matrix)):
            for j in range(0, len(matrix[0])):
                dist = max(dist, recurse(i, j, float("-inf")))

        return dist

        # Recursive solution m * n * 4^(m*n)
        def recurse(i, j, prev):
            if (i < 0 or i >= len(matrix) or 
                j < 0 or j >= len(matrix[0]) or
                prev >= matrix[i][j]):
                return 0

            dist = 1 + recurse(i + 1, j, matrix[i][j])
            dist = max(dist, 1 + recurse(i - 1, j, matrix[i][j]))
            dist = max(dist, 1 + recurse(i, j + 1, matrix[i][j]))
            dist = max(dist, 1 + recurse(i, j - 1, matrix[i][j]))

            return dist

        dist = 0
        for i in range(0, len(matrix)):
            for j in range(0, len(matrix[0])):
                dist = max(dist, recurse(i, j, float("-inf")))

        return dist